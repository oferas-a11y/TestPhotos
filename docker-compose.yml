version: '3.8'

services:
  testphotos-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: historical-photos-api
    ports:
      - "5000:5000"
    environment:
      # API Keys (set these in your .env file)
      - PINECONE_API_KEY=${PINECONE_API_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - GROQ_API_KEY=${GROQ_API_KEY}
      
      # Flask configuration
      - FLASK_ENV=production
      - FLASK_DEBUG=false
      - PORT=5000
      
      # Python configuration
      - PYTHONPATH=/app:/app/main_app
      - PYTHONUNBUFFERED=1
    
    volumes:
      # Persist logs and outputs
      - ./logs:/app/logs
      - ./main_app_outputs:/app/main_app_outputs
    
    restart: unless-stopped
    
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    
    # Resource limits optimized for 2GB VPS  
    deploy:
      resources:
        limits:
          memory: 1.5G      # Comfortable limit for 2GB VPS
          cpus: '2.0'       # Use both cores fully
        reservations:
          memory: 512M      # Good reservation for stable operation
          cpus: '0.5'       # Reserve half core minimum

# Optional: Nginx reverse proxy
  # nginx:
  #   image: nginx:alpine
  #   container_name: nginx-proxy
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - testphotos-api
  #   restart: unless-stopped

volumes:
  app_logs:
  app_outputs: