# Railway-optimized Dockerfile for Historical Photos API
# Leverages 8GB RAM and 8 vCPU for maximum performance

FROM python:3.11-slim as base

# Set environment variables optimized for Railway
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    PYTHONPATH=/app:/app/main_app

# Install system dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN useradd --create-home --shell /bin/bash app

# Set working directory
WORKDIR /app

# Copy requirements first for better caching
COPY requirements-railway.txt requirements.txt
COPY requirements-railway.txt .

# Install Python dependencies with optimizations for 8GB RAM
RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements-railway.txt

# Copy application code
COPY . .

# Create necessary directories and set permissions
RUN mkdir -p /app/logs /app/main_app_outputs && \
    chown -R app:app /app

# Switch to non-root user  
USER app

# Expose Railway's port (Railway sets PORT environment variable)
EXPOSE $PORT

# Health check for Railway
HEALTHCHECK --interval=30s --timeout=30s --start-period=90s --retries=3 \
    CMD curl -f http://localhost:${PORT:-5000}/health || exit 1

# Use Railway-optimized entrypoint
COPY railway-entrypoint.sh /app/railway-entrypoint.sh
USER root
RUN chmod +x /app/railway-entrypoint.sh
USER app

# Start the application
ENTRYPOINT ["/app/railway-entrypoint.sh"]
CMD ["python", "app.py"]